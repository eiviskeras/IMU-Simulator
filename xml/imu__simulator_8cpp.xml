<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="imu__simulator_8cpp" kind="file" language="C++">
    <compoundname>imu_simulator.cpp</compoundname>
    <includes refid="imu__simulator_8h" local="yes">imu_simulator.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="5">
        <label>imu_simulator_structures.h</label>
        <link refid="imu__simulator__structures_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>iomanip</label>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="4">
        <label>random</label>
      </node>
      <node id="1">
        <label>/__w/IMU-Simulator/IMU-Simulator/src/imu_simulator.cpp</label>
        <link refid="imu__simulator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>imu_simulator.h</label>
        <link refid="imu__simulator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceimu__simulator">imu_simulator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imu__simulator_8h" kindref="compound">imu_simulator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespaceimu__simulator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceimu__simulator" kindref="compound">imu_simulator</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="classimu__simulator_1_1_imu_simulator_1ac7a97ea2123b0f39d1893c25249f278f" kindref="member">ImuSimulator::ImuSimulator</ref>(<ref refid="structimu__simulator_1_1_imu_sim_params" kindref="compound">ImuSimParams</ref><sp/>accSimParams,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimu__simulator_1_1_imu_sim_params" kindref="compound">ImuSimParams</ref><sp/>gyroSimParams,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimu__simulator_1_1_imu_model_enable_settings" kindref="compound">ImuModelEnableSettings</ref><sp/>imuModelEnableSettings,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>geoPositionLlh,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>v_eb_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>accSimParams_(accSimParams),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_(gyroSimParams),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pAccStochasticErrors_(std::make_shared&lt;ImuStochasticErrors&gt;()),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pGyroStochasticErrors_(std::make_shared&lt;ImuStochasticErrors&gt;()),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imuModelEnableSettings_(imuModelEnableSettings),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constErrorsInitialized_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geoPositionLlh_(geoPositionLlh),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_eb_n_(v_eb_n),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w_en_n_(calcTransportAngularVelocity(geoPositionLlh,<sp/>v_eb_n)),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dt_(dt),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>randomNumberGenerator_(seed),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalDistribution_(0,<sp/>1),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uniformDistribution_(0,<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>IMU<sp/>stochastic<sp/>error<sp/>structs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>pAccStochasticErrors_-&gt;z_N<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>pAccStochasticErrors_-&gt;z_B<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>pAccStochasticErrors_-&gt;z_K<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>pGyroStochasticErrors_-&gt;z_N<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>pGyroStochasticErrors_-&gt;z_B<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>pGyroStochasticErrors_-&gt;z_K<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>local<sp/>gravity<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>environmentalParameters_.g_n<sp/>=<sp/>calcGravityVectorWelmec(geoPositionLlh_);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>local<sp/>angular<sp/>velocity<sp/>vector<sp/>of<sp/>Earth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>environmentalParameters_.w_ie_n<sp/>=<sp/>calcAngularVelocityOfEarth(geoPositionLlh_);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>IMU<sp/>constant<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>initializeRandomConstantErrors();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="classimu__simulator_1_1_imu_simulator_1ad16decb457583891110ce9664818c045" kindref="member">ImuSimulator::~ImuSimulator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="structimu__simulator_1_1_imu_sim_params" kindref="compound">ImuSimParams</ref><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a96dd3c5937db465de91b7b03496465d4" kindref="member">ImuSimulator::getImuSimParams</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accSimParams_;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gyroSimParams_;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;getImuSimParams:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structimu__simulator_1_1_imu_sim_params" kindref="compound">ImuSimParams</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="structimu__simulator_1_1_environmental_parameters" kindref="compound">EnvironmentalParameters</ref><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1aed90a8be53b12204d64698fbaff5e9a4" kindref="member">ImuSimulator::getEnvironmentalParameters</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>environmentalParameters_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a0b0d7617305f29fa108e2a747b39ddf3" kindref="member">ImuSimulator::getConstTurnOnBias</ref>(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accConstTurnOnBias_;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gyroConstTurnOnBias_;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;getConstTurnOnBias:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="structimu__simulator_1_1_imu_stochastic_errors" kindref="compound">ImuStochasticErrors</ref><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a688edd794e516795a522d3df79ec8bd2" kindref="member">ImuSimulator::getImuStochasticErrors</ref>(</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pAccStochasticErrors_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pGyroStochasticErrors_;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;getImuStochasticErrors:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structimu__simulator_1_1_imu_stochastic_errors" kindref="compound">ImuStochasticErrors</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a763265d6190b7be5331c24b219d649f8" kindref="member">ImuSimulator::getImuGeoPositionLlh</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>geoPositionLlh_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a172183f2211a749944e8a5a2278bbd36" kindref="member">ImuSimulator::getImuGeoVelocity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v_eb_n_;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1aff94b6b8f7bedf1f6ce91de4bc0367af" kindref="member">ImuSimulator::getConstScaleFactor</ref>(</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accConstScaleFactor_;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gyroConstScaleFactor_;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;getConstScaleFactor:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a4dbe68108f09a5e9fc78e1a064732401" kindref="member">ImuSimulator::getConstMisAlignment</ref>(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accConstMisAlignment_;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gyroConstMisAlignment_;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;getConstMisAlignment:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">Eigen::Matrix&lt;double,<sp/>6,<sp/>1&gt;<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1aed7a69326c802ca2fb0fc15a624553da" kindref="member">ImuSimulator::getConstNonOrthogonality</ref>(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accConstNonOrthogonality_;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gyroConstNonOrthogonality_;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;getConstNonOrthogonality:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>6,<sp/>1&gt;({{0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0}});</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a0c1e7b40d1cc469479320d899c977060" kindref="member">ImuSimulator::setImuSimParameters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structimu__simulator_1_1_imu_sim_params" kindref="compound">ImuSimParams</ref>&amp;<sp/>accSimParams,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structimu__simulator_1_1_imu_sim_params" kindref="compound">ImuSimParams</ref>&amp;<sp/>gyroSimParams)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>accSimParams_<sp/>=<sp/>accSimParams;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>gyroSimParams_<sp/>=<sp/>gyroSimParams;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">std::stringstream<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a82c4673484fbb2020c5d365f9c69213e" kindref="member">ImuSimulator::printImuSimulatorParameters</ref>()<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>stringstream<sp/>to<sp/>store<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>IMU-Simulator&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accelerometer<sp/>simulation<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Accelerometer<sp/>simulation<sp/>parameters:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(6);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>.transpose()</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s^(3/2)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;B:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>.transpose()</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s^2\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;K:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>.transpose()</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s^(5/2)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;corrTime:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalTurnOnBias:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.transpose()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s^2\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;measRange:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ad0c727e7b995f61ae67b55aac084735b" kindref="member">measRange</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s^2\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalMisAlignment:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalNonOrthogonality:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalScaleFactor:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.transpose()</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;resolution:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ae0d36b0c5fa483e2c140e4261c0aa021" kindref="member">resolution</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s^2/LSB\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyroscope<sp/>simulation<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Gyroscope<sp/>simulation<sp/>parameters:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>.transpose()</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s^(1/2)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;B:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>.transpose()</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;K:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>.transpose()</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s^(3/2)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;corrTime:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalTurnOnBias:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.transpose()</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;measRange:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ad0c727e7b995f61ae67b55aac084735b" kindref="member">measRange</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalMisAlignment:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalNonOrthogonality:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;intervalScaleFactor:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.transpose()</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;resolution:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ae0d36b0c5fa483e2c140e4261c0aa021" kindref="member">resolution</ref>.transpose()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s/LSB\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IMU<sp/>model<sp/>enable<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IMU<sp/>model<sp/>enable<sp/>settings:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Accelerometer:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Turn-on<sp/>bias:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a2c04146d62ae76a310b0582ac1530ea5" kindref="member">enableTurnOnBias</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stochastic<sp/>error:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a214aa640096f7676bc3e432d4bfc6178" kindref="member">enableStochasticError</ref></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Scaling:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab7fca567b51890d3738a32cceac1cd5f" kindref="member">enableScaling</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Misalignment:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a0ae24e9e555fde2d6dda64646ea4e86b" kindref="member">enableMisAlignment</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Saturation:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a5aca25d14a272f54016588fac09c724e" kindref="member">enableSaturation</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Quantization:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a31e4f7e6b622d09c6878e47ba81f196d" kindref="member">enableQuantization</ref></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Gyroscope:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Turn-on<sp/>bias:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a2c04146d62ae76a310b0582ac1530ea5" kindref="member">enableTurnOnBias</ref></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stochastic<sp/>error:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a214aa640096f7676bc3e432d4bfc6178" kindref="member">enableStochasticError</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Scaling:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab7fca567b51890d3738a32cceac1cd5f" kindref="member">enableScaling</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Misalignment:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a0ae24e9e555fde2d6dda64646ea4e86b" kindref="member">enableMisAlignment</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Saturation:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a5aca25d14a272f54016588fac09c724e" kindref="member">enableSaturation</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Quantization:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a31e4f7e6b622d09c6878e47ba81f196d" kindref="member">enableQuantization</ref></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Environmental<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Environmental<sp/>parameters:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Local<sp/>gravity<sp/>vector:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>environmentalParameters_.<ref refid="structimu__simulator_1_1_environmental_parameters_1a6a22536c11f1d416ae9ddae622241c64" kindref="member">g_n</ref>.transpose()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m/s²\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Local<sp/>angular<sp/>velocity<sp/>of<sp/>Earth:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>environmentalParameters_.<ref refid="structimu__simulator_1_1_environmental_parameters_1aaeec21c3cc0f7beb5348cb536fe16d08" kindref="member">w_ie_n</ref>.transpose()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rad/s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sampling<sp/>time<sp/>and<sp/>frequeqncy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sampling<sp/>time:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(6)<sp/>&lt;&lt;<sp/>dt_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(50)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sampling<sp/>frequency:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(6)<sp/>&lt;&lt;<sp/>1.0<sp/>/<sp/>dt_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Hz\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**********************************************************************&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1abe778284db4258dbf259a934843d0fbe" kindref="member">ImuSimulator::setEnvironmentalParameters</ref>(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structimu__simulator_1_1_environmental_parameters" kindref="compound">EnvironmentalParameters</ref>&amp;<sp/>environmentalParameters)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>environmentalParameters_<sp/>=<sp/>environmentalParameters;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a95a47808aa9e87a80650afc1ad7146b5" kindref="member">ImuSimulator::setSimulatorSeed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>randomNumberGenerator_.seed(seed);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a0fbcd5fb36caf376aab19b7b2c4a67ba" kindref="member">ImuSimulator::setImuSampleTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>dt_<sp/>=<sp/>dt;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a8eaaefd4a278f6fbc4b1d3682e969c28" kindref="member">ImuSimulator::setImuGeoPositionLlh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>geoPositionLlh)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>geoPositionLlh_<sp/>=<sp/>geoPositionLlh;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a03058a20aa76ef9675f0645a89308731" kindref="member">ImuSimulator::setImuGeoVelocity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>v_eb_n)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>v_eb_n_<sp/>=<sp/>v_eb_n;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1ab20bcd9c74d655b8457bf418b90cb0c5" kindref="member">ImuSimulator::setImuEnableSettings</ref>(</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structimu__simulator_1_1_imu_model_enable_settings" kindref="compound">ImuModelEnableSettings</ref>&amp;<sp/>imuModelEnableSettings)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_<sp/>=<sp/>imuModelEnableSettings;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a731376934f5fdb3f424d8a10d61fdbe8" kindref="member">ImuSimulator::setAccEnableGravity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab44f95d12e501ae85ef30cc0ae855f1c" kindref="member">enableLocalRefVec</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a66337847c6a8db0daa3045d5eab08712" kindref="member">ImuSimulator::setAccEnableTurnOnBias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a2c04146d62ae76a310b0582ac1530ea5" kindref="member">enableTurnOnBias</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a7f7271db668951fbe5f608da01da9308" kindref="member">ImuSimulator::setAccEnableScaling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab7fca567b51890d3738a32cceac1cd5f" kindref="member">enableScaling</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a770f0859a2118964da66626c8cb63632" kindref="member">ImuSimulator::setAccEnableMisAlignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a0ae24e9e555fde2d6dda64646ea4e86b" kindref="member">enableMisAlignment</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a6ad5c1ca00356852fa376c1bd771e7b0" kindref="member">ImuSimulator::setAccEnableStochasticError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a214aa640096f7676bc3e432d4bfc6178" kindref="member">enableStochasticError</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a53539582175eb9a5d57db596c3c93ee8" kindref="member">ImuSimulator::setAccEnableSaturation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a5aca25d14a272f54016588fac09c724e" kindref="member">enableSaturation</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a5cca24a9a9bba92d6970467b153e90be" kindref="member">ImuSimulator::setAccEnableQuantization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a31e4f7e6b622d09c6878e47ba81f196d" kindref="member">enableQuantization</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a6f6b5880cccf69d1d133e9da200e495b" kindref="member">ImuSimulator::setGyroEnableEarthAngularVelocity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab44f95d12e501ae85ef30cc0ae855f1c" kindref="member">enableLocalRefVec</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1acc1a8c2b3ccb43c70393a2f1a31e975c" kindref="member">ImuSimulator::setGyroEnableTurnOnBias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a2c04146d62ae76a310b0582ac1530ea5" kindref="member">enableTurnOnBias</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1aca5282578b361a5e0599b264cd51ef07" kindref="member">ImuSimulator::setGyroEnableScaling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab7fca567b51890d3738a32cceac1cd5f" kindref="member">enableScaling</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1af74dec667541b7aab798b66f092c5534" kindref="member">ImuSimulator::setGyroEnableMisAlignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a0ae24e9e555fde2d6dda64646ea4e86b" kindref="member">enableMisAlignment</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a78e4cecee5b12b2aa764689af4abb4a7" kindref="member">ImuSimulator::setGyroEnableStochasticError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a214aa640096f7676bc3e432d4bfc6178" kindref="member">enableStochasticError</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a49c4cb149eda73ec856c57356e04671e" kindref="member">ImuSimulator::setGyroEnableSaturation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a5aca25d14a272f54016588fac09c724e" kindref="member">enableSaturation</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a7bfde8457dbb543f69c7b7e83124dcfc" kindref="member">ImuSimulator::setGyroEnableQuantization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a31e4f7e6b622d09c6878e47ba81f196d" kindref="member">enableQuantization</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a3584486635f73ef48c7dc8d532daa9da" kindref="member">ImuSimulator::setUseFixedRandomNumbersFlag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>useFixedRandomNumbers_<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImuSimulator::initializeRandomConstantErrors()<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>const<sp/>turn-on<sp/>bias<sp/>for<sp/>each<sp/>accelerometer<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>accConstTurnOnBias_(0)<sp/>=</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.x());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>accConstTurnOnBias_(1)<sp/>=</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.y());</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>accConstTurnOnBias_(2)<sp/>=</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.z());</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>const<sp/>turn-on<sp/>bias<sp/>for<sp/>each<sp/>gyroscope<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>gyroConstTurnOnBias_(0)<sp/>=</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.x());</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>gyroConstTurnOnBias_(1)<sp/>=</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.y());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>gyroConstTurnOnBias_(2)<sp/>=</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ab9790b4f7bf3804bd5bb07a021f93eeb" kindref="member">intervalTurnOnBias</ref>.z());</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>const<sp/>scale<sp/>factor<sp/>error<sp/>for<sp/>each<sp/>accelerometer<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>accConstScaleFactor_(0)<sp/>=</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.x());</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>accConstScaleFactor_(1)<sp/>=</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.y());</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>accConstScaleFactor_(2)<sp/>=</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawRandUniformDistNumFromInterval(accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.z());</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>const<sp/>scale<sp/>factor<sp/>for<sp/>each<sp/>gyroscope<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>gyroConstScaleFactor_(0)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.x());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>gyroConstScaleFactor_(1)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.y());</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>gyroConstScaleFactor_(2)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a4c160bcb033b932a32544a0179f82891" kindref="member">intervalScaleFactor</ref>.z());</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>orthogonality<sp/>error<sp/>for<sp/>each<sp/>pair<sp/>of<sp/>accelerometer<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>accConstNonOrthogonality_(0)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[0]);<sp/><sp/></highlight><highlight class="comment">//<sp/>xz-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>accConstNonOrthogonality_(1)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[1]);<sp/><sp/></highlight><highlight class="comment">//<sp/>xy-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>accConstNonOrthogonality_(2)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[2]);<sp/><sp/></highlight><highlight class="comment">//<sp/>yz-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>accConstNonOrthogonality_(3)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[3]);<sp/><sp/></highlight><highlight class="comment">//<sp/>yx-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>accConstNonOrthogonality_(4)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[4]);<sp/><sp/></highlight><highlight class="comment">//<sp/>zy-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>accConstNonOrthogonality_(5)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[5]);<sp/><sp/></highlight><highlight class="comment">//<sp/>zx-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>orthogonality<sp/>error<sp/>for<sp/>each<sp/>pair<sp/>of<sp/>gyroscope<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>gyroConstNonOrthogonality_(0)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[0]);<sp/><sp/></highlight><highlight class="comment">//<sp/>xz-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>gyroConstNonOrthogonality_(1)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[1]);<sp/><sp/></highlight><highlight class="comment">//<sp/>xy-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>gyroConstNonOrthogonality_(2)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[2]);<sp/><sp/></highlight><highlight class="comment">//<sp/>yz-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>gyroConstNonOrthogonality_(3)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[3]);<sp/><sp/></highlight><highlight class="comment">//<sp/>yx-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>gyroConstNonOrthogonality_(4)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[4]);<sp/><sp/></highlight><highlight class="comment">//<sp/>zy-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>gyroConstNonOrthogonality_(5)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a07a4341844b7ae27de7b02c2586f5034" kindref="member">intervalNonOrthogonality</ref>[5]);<sp/><sp/></highlight><highlight class="comment">//<sp/>zx-plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>alignment<sp/>error<sp/>for<sp/>each<sp/>accelerometer<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>accConstMisAlignment_(0)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.x());</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>accConstMisAlignment_(1)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.y());</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>accConstMisAlignment_(2)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.z());</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>alignment<sp/>error<sp/>for<sp/>each<sp/>gyroscope<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>gyroConstMisAlignment_(0)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.x());</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>gyroConstMisAlignment_(1)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.y());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>gyroConstMisAlignment_(2)<sp/>=<sp/>drawRandUniformDistNumFromInterval(</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a5d4458568373d00bd48bff0c70cdb58f" kindref="member">intervalMisAlignment</ref>.z());</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>constErrorsInitialized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a16aaafc3d95f01d7c19573f49ecf8f44" kindref="member">ImuSimulator::generateAccelerationMeasurement</ref>(</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>a_ib_b_true,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Quaterniond<sp/>q_b_n_true)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>constant<sp/>errors<sp/>have<sp/>been<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constErrorsInitialized_<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;generateAccelerationMeasurement:<sp/>Constant<sp/>errors<sp/>have<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;been<sp/>initialized!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>measurement<sp/>vector<sp/>with<sp/>true<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>f_ib_b_meas<sp/>=<sp/>a_ib_b_true;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>local<sp/>gravity<sp/>vector<sp/>for<sp/>last<sp/>geodetic<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>environmentalParameters_.<ref refid="structimu__simulator_1_1_environmental_parameters_1a6a22536c11f1d416ae9ddae622241c64" kindref="member">g_n</ref><sp/>=<sp/>calcGravityVectorWelmec(geoPositionLlh_);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>gravity<sp/>model,<sp/>now<sp/>acceleration<sp/>is<sp/>a<sp/>specific<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab44f95d12e501ae85ef30cc0ae855f1c" kindref="member">enableLocalRefVec</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcAccelerometerGravityModel(f_ib_b_meas,<sp/>q_b_n_true);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>constant<sp/>turn-on<sp/>bias<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a2c04146d62ae76a310b0582ac1530ea5" kindref="member">enableTurnOnBias</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcConstTurnOnBiasModel(f_ib_b_meas,<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scale<sp/>factor<sp/>error<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab7fca567b51890d3738a32cceac1cd5f" kindref="member">enableScaling</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcScaleFactorModel(f_ib_b_meas,<sp/>accConstScaleFactor_);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scale<sp/>factor<sp/>error<sp/>and<sp/>misalignment<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a0ae24e9e555fde2d6dda64646ea4e86b" kindref="member">enableMisAlignment</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcMisalignmentModel(f_ib_b_meas,<sp/>accConstNonOrthogonality_,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accConstMisAlignment_);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>stochastic<sp/>error<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a214aa640096f7676bc3e432d4bfc6178" kindref="member">enableStochasticError</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcStochasticErrorModel(f_ib_b_meas,<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>saturation<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a5aca25d14a272f54016588fac09c724e" kindref="member">enableSaturation</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcSaturationModel(f_ib_b_meas,<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ad0c727e7b995f61ae67b55aac084735b" kindref="member">measRange</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>quantization<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1a50475c85840919a17f4160fc4d45b75b" kindref="member">acc</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a31e4f7e6b622d09c6878e47ba81f196d" kindref="member">enableQuantization</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>f_ib_b_meas<sp/>=<sp/>calcQuantizationModel(f_ib_b_meas,<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ae0d36b0c5fa483e2c140e4261c0aa021" kindref="member">resolution</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_ib_b_meas;</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a2cf5be68768eb1051b1a4a65aa4930ba" kindref="member">ImuSimulator::generateGyroscopeMeasurement</ref>(</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>w_nb_b_true,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Quaterniond<sp/>q_b_n_true)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>constant<sp/>errors<sp/>have<sp/>been<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constErrorsInitialized_<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;generateGyroscopeMeasurement:<sp/>Constant<sp/>errors<sp/>have<sp/>not<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;initialized!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>measurement<sp/>vector<sp/>with<sp/>true<sp/>angular<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>w_ib_b_meas<sp/>=<sp/>w_nb_b_true;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>local<sp/>angular<sp/>velocity<sp/>of<sp/>Earth<sp/>for<sp/>last<sp/>geodetic<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>environmentalParameters_.<ref refid="structimu__simulator_1_1_environmental_parameters_1aaeec21c3cc0f7beb5348cb536fe16d08" kindref="member">w_ie_n</ref><sp/>=<sp/>calcAngularVelocityOfEarth(geoPositionLlh_);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>transport<sp/>angular<sp/>velocity<sp/>for<sp/>last<sp/>geodetic<sp/>position/velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>w_en_n_<sp/>=<sp/>calcTransportAngularVelocity(geoPositionLlh_,<sp/>v_eb_n_);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>Earth<sp/>angular<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab44f95d12e501ae85ef30cc0ae855f1c" kindref="member">enableLocalRefVec</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calcGyroscopeEarthAngularVelocityModel(w_ib_b_meas,<sp/>q_b_n_true);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>constant<sp/>turn-on<sp/>bias<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a2c04146d62ae76a310b0582ac1530ea5" kindref="member">enableTurnOnBias</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=<sp/>calcConstTurnOnBiasModel(w_ib_b_meas,<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scale<sp/>factor<sp/>error<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1ab7fca567b51890d3738a32cceac1cd5f" kindref="member">enableScaling</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=<sp/>calcScaleFactorModel(w_ib_b_meas,<sp/>gyroConstScaleFactor_);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scale<sp/>factor<sp/>error<sp/>and<sp/>misalignment<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a0ae24e9e555fde2d6dda64646ea4e86b" kindref="member">enableMisAlignment</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=<sp/>calcMisalignmentModel(w_ib_b_meas,<sp/>gyroConstNonOrthogonality_,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroConstMisAlignment_);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>stochastic<sp/>error<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a214aa640096f7676bc3e432d4bfc6178" kindref="member">enableStochasticError</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=<sp/>calcStochasticErrorModel(w_ib_b_meas,<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>saturation<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a5aca25d14a272f54016588fac09c724e" kindref="member">enableSaturation</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=<sp/>calcSaturationModel(w_ib_b_meas,<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ad0c727e7b995f61ae67b55aac084735b" kindref="member">measRange</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>quantization<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imuModelEnableSettings_.<ref refid="structimu__simulator_1_1_imu_model_enable_settings_1ae2cd3a9cf4c36834319be9f21942555f" kindref="member">gyro</ref>.<ref refid="structimu__simulator_1_1_model_enable_settings_1a31e4f7e6b622d09c6878e47ba81f196d" kindref="member">enableQuantization</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ib_b_meas<sp/>=<sp/>calcQuantizationModel(w_ib_b_meas,<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1ae0d36b0c5fa483e2c140e4261c0aa021" kindref="member">resolution</ref>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w_ib_b_meas;</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcScaleFactorModel(</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measurement,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>scaleFactor)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scale<sp/>factor<sp/>error<sp/>to<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>measurementScaled<sp/>=</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>measurement.array()<sp/>*<sp/>(1.0<sp/>+<sp/>scaleFactor.array()<sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measurementScaled;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcMisalignmentModel(</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measurement,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>6,<sp/>1&gt;&amp;<sp/>nonOrthogonality,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>misAlignment)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>misalignment<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>Eigen::Matrix3d<sp/>misAlignmentMatrix{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisd(misAlignment(0),<sp/>Eigen::Vector3d::UnitX())<sp/>*</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisd(misAlignment(1),<sp/>Eigen::Vector3d::UnitY())<sp/>*</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::AngleAxisd(misAlignment(2),<sp/>Eigen::Vector3d::UnitZ())};</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>non-orthogonality<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>Eigen::Matrix3d<sp/>nonOrthogonalityMatrix{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{1.0,<sp/>-nonOrthogonality(0),<sp/>nonOrthogonality(1)},</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{nonOrthogonality(2),<sp/>1.0,<sp/>-nonOrthogonality(3)},</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{-nonOrthogonality(4),<sp/>nonOrthogonality(5),<sp/>1.0}};</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>misalignment<sp/>and<sp/>orthogonality<sp/>error<sp/>to<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>misAlignedMeasurement<sp/>=</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>misAlignmentMatrix<sp/>*<sp/>nonOrthogonalityMatrix<sp/>*<sp/>measurement;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>misAlignedMeasurement;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcConstTurnOnBiasModel(</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measurement,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>of<sp/>measurement<sp/>with<sp/>constant<sp/>turn-on<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>measurementWithBias;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constErrorsInitialized_<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calcConstTurnOnBiasModel:<sp/>Constant<sp/>errors<sp/>not<sp/>initialized!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measurement;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>const<sp/>turn-on<sp/>bias<sp/>to<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>measurementWithBias<sp/>=<sp/>measurement<sp/>+<sp/>accConstTurnOnBias_;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>measurementWithBias<sp/>=<sp/>measurement<sp/>+<sp/>gyroConstTurnOnBias_;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calcConstTurnOnBiasModel:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>measurementWithBias<sp/>=<sp/>measurement;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measurementWithBias;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcStochasticErrorModel(</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measurement,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42ee" kindref="member">MeasurementType</ref>&amp;<sp/>measurementType)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>of<sp/>measurement<sp/>with<sp/>stochastic<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>measurementWithStochasticError;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>of<sp/>colored<sp/>noise<sp/>for<sp/>each<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>coloredNoise;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>discrete-time<sp/>equivalent<sp/>state-space<sp/>model<sp/>for<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea25ad19a5a52a90402c0664087a555ac0" kindref="member">acc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>colored<sp/>noise<sp/>for<sp/>each<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>coloredNoise(0)<sp/>=<sp/>updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAccStochasticErrors_,<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),<sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>coloredNoise(1)<sp/>=<sp/>updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAccStochasticErrors_,<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),<sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>coloredNoise(2)<sp/>=<sp/>updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAccStochasticErrors_,<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),<sp/>accSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),<sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>stochastic<sp/>error<sp/>to<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>measurementWithStochasticError<sp/>=<sp/>measurement<sp/>+<sp/>coloredNoise;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurementType<sp/>==<sp/><ref refid="namespaceimu__simulator_1a84e61dc51b8fae4525bbebee5a1b42eea8ca2c6e6c1386204d2e1ff7e4b8c3c8a" kindref="member">gyro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>colored<sp/>noise<sp/>for<sp/>each<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>coloredNoise(0)<sp/>=<sp/>updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGyroStochasticErrors_,<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>),<sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ae90c2bb427415aee57804e9a269feb5b" kindref="member">axisX</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>coloredNoise(1)<sp/>=<sp/>updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGyroStochasticErrors_,<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>),<sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652a14ded4622ea75955a80127059eda3984" kindref="member">axisY</ref>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>coloredNoise(2)<sp/>=<sp/>updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGyroStochasticErrors_,<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a87df0666ae9615ebf7ef3e2429197eab" kindref="member">N</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a42596ddb0e55648399a4ba96eb447a7f" kindref="member">B</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),<sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1a98f024032ef2d7c9108501bd409d9a1d" kindref="member">K</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyroSimParams_.<ref refid="structimu__simulator_1_1_imu_sim_params_1afce6a4d132af40ce559eea2c7c021632" kindref="member">corrTime</ref>(<ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>),<sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652ac31a2de28fc62d4b039fcb85c220360a" kindref="member">axisZ</ref>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>stochastic<sp/>error<sp/>to<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>measurementWithStochasticError<sp/>=<sp/>measurement<sp/>+<sp/>coloredNoise;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>measurement<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calcStochasticErrorModel:<sp/>Invalid<sp/>measurement<sp/>type!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>measurementWithStochasticError<sp/>=<sp/>measurement;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measurementWithStochasticError;</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImuSimulator::updateDiscreteTimeEquivalentStateSpaceModel(</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ImuStochasticErrors&gt;<sp/>pImuStochasticErrors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>N,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>corrTime,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceimu__simulator_1a631446e36eee7d573884f78bcbdbf652" kindref="member">AxisIdentifier</ref><sp/>axisId)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PSD<sp/>velocity/angle<sp/>random<sp/>walk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S_N<sp/>=<sp/>N<sp/>*<sp/>N;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PSD<sp/>bias<sp/>instability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S_B<sp/>=<sp/>(2<sp/>*<sp/>B<sp/>*<sp/>B<sp/>*<sp/>std::log(2))<sp/>/<sp/>(M_PI<sp/>*<sp/>0.4365<sp/>*<sp/>0.4365<sp/>*<sp/>corrTime);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PSD<sp/>accel./rate<sp/>random<sp/>walk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S_K<sp/>=<sp/>K<sp/>*<sp/>K;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gauss-Markov<sp/>time<sp/>correlation<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>corrConstant<sp/>=<sp/>1<sp/>/<sp/>corrTime;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discrete-time<sp/>state-space<sp/>model<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>Eigen::Matrix2d<sp/>Phi_k;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>Phi_k<sp/>&lt;&lt;<sp/>std::exp(-corrConstant<sp/>*<sp/>dt_),<sp/>0,<sp/>0,<sp/>1;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>Eigen::MatrixXd<sp/>H(1,<sp/>2);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>H<sp/>&lt;&lt;<sp/>1,<sp/>1;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discrete-time<sp/>bias<sp/>instability<sp/>covariance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q_B_k<sp/>=</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S_B<sp/>/<sp/>(2<sp/>*<sp/>corrConstant)<sp/>*<sp/>(1<sp/>-<sp/>std::exp(-2<sp/>*<sp/>corrConstant<sp/>*<sp/>dt_));</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discrete-time<sp/>rate<sp/>random<sp/>walk<sp/>covariance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q_K_k<sp/>=<sp/>S_K<sp/>*<sp/>dt_;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discrete-time<sp/>measurement<sp/>noise<sp/>covariance<sp/>(velocity/angle<sp/>random<sp/>walk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q_N_k<sp/>=<sp/>S_N<sp/>/<sp/>dt_;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>random<sp/>number<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>randomNumbers;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useFixedRandomNumbers_<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>fixed<sp/>random<sp/>numbers<sp/>for<sp/>testing/debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>randomNumbers<sp/>=<sp/>Eigen::Vector3d(1.0,<sp/>2.0,<sp/>3.0);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>normal<sp/>distributed<sp/>random<sp/>samples<sp/>from<sp/>white<sp/>noise<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>randomNumbers<sp/>=</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d(drawRandNormalDistNum(),<sp/>drawRandNormalDistNum(),</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawRandNormalDistNum());</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>measurement<sp/>noise<sp/>scalar<sp/>(velocity/angle<sp/>random<sp/>walk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>nu_N_k<sp/>=</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd::Constant(1,<sp/>std::sqrt(Q_N_k)<sp/>*<sp/>randomNumbers(0));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>process<sp/>noise<sp/>vector<sp/>(bias<sp/>instability<sp/>and<sp/>accel./rate<sp/>random<sp/>walk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>Eigen::Vector2d<sp/>w_BK_k<sp/>=<sp/>Eigen::Vector2d(std::sqrt(Q_B_k)<sp/>*<sp/>randomNumbers(1),</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sqrt(Q_K_k)<sp/>*<sp/>randomNumbers(2));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>state<sp/>vector<sp/>for<sp/>one<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z_B<sp/>=<sp/>pImuStochasticErrors-&gt;z_B(axisId);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z_K<sp/>=<sp/>pImuStochasticErrors-&gt;z_K(axisId);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>Eigen::Vector2d<sp/>x_k<sp/>=<sp/>Eigen::Vector2d(z_B,<sp/>z_K);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>state<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>Eigen::Vector2d<sp/>x_k_1<sp/>=<sp/>Phi_k<sp/>*<sp/>x_k<sp/>+<sp/>w_BK_k;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>measurement<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>z_k<sp/>=<sp/>H<sp/>*<sp/>x_k<sp/>+<sp/>nu_N_k;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>internal<sp/>Gauss-Markov<sp/>state<sp/>space<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>pImuStochasticErrors-&gt;z_N(axisId)<sp/>=<sp/>z_k(0);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>pImuStochasticErrors-&gt;z_B(axisId)<sp/>=<sp/>x_k_1(0);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>pImuStochasticErrors-&gt;z_K(axisId)<sp/>=<sp/>x_k_1(1);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>colored<sp/>noise<sp/>as<sp/>double<sp/>(scalar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z_k(0);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcAccelerometerGravityModel(</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>a_ib_b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Quaterniond&amp;<sp/>q_b_n_true)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>quaternion<sp/>to<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>Eigen::Matrix3d<sp/>C_n_b<sp/>=<sp/>q_b_n_true.toRotationMatrix().transpose();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>true<sp/>specific<sp/>force<sp/>by<sp/>subtracting<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>f_ib_b<sp/>=<sp/>a_ib_b<sp/>-<sp/>C_n_b<sp/>*<sp/>environmentalParameters_.<ref refid="structimu__simulator_1_1_environmental_parameters_1a6a22536c11f1d416ae9ddae622241c64" kindref="member">g_n</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_ib_b;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcGyroscopeEarthAngularVelocityModel(</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>w_nb_b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Quaterniond&amp;<sp/>q_b_n_true)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>quaternion<sp/>to<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>Eigen::Matrix3d<sp/>C_n_b<sp/>=<sp/>q_b_n_true.toRotationMatrix().transpose();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>true<sp/>angular<sp/>velocity<sp/>by<sp/>adding<sp/>Earth/transport<sp/>angular<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>w_ib_b<sp/>=</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w_nb_b<sp/>+<sp/>C_n_b<sp/>*<sp/>(environmentalParameters_.<ref refid="structimu__simulator_1_1_environmental_parameters_1aaeec21c3cc0f7beb5348cb536fe16d08" kindref="member">w_ie_n</ref><sp/>+<sp/>w_en_n_);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w_ib_b;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcGravityVectorWelmec(</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>geoPositionLlh)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gravity<sp/>reference<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_0<sp/>=<sp/>9.780318;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_1<sp/>=<sp/>5.3024e-3;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_2<sp/>=<sp/>5.8e-6;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_3<sp/>=<sp/>3.085e-6;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>gravity<sp/>vector<sp/>according<sp/>WELMEC<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>g_n;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>g_n<sp/>&lt;&lt;<sp/>0.0,<sp/>0.0,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_0<sp/>*<sp/>(1<sp/>+<sp/>g_1<sp/>*<sp/>std::pow(std::sin(geoPositionLlh(0)),<sp/>2)<sp/>-</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_2<sp/>*<sp/>std::pow(std::sin(2<sp/>*<sp/>geoPositionLlh(0)),<sp/>2))<sp/>-</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_3<sp/>*<sp/>geoPositionLlh(2);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g_n;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcAngularVelocityOfEarth(</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>geoPositionLlh)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_ie<sp/>=<sp/>7.292115e-5;<sp/><sp/></highlight><highlight class="comment">//<sp/>Angular<sp/>velocity<sp/>of<sp/>Earth<sp/>(rad/s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Angular<sp/>velocity<sp/>of<sp/>Earth<sp/>in<sp/>navigation<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>w_ie_n;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>w_ie_n<sp/>&lt;&lt;<sp/>omega_ie<sp/>*<sp/>std::cos(geoPositionLlh(0)),<sp/>0.0,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-omega_ie<sp/>*<sp/>std::sin(geoPositionLlh(0));</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w_ie_n;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcTransportAngularVelocity(</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>geoPositionLlh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>v_eb_n)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Semi-major<sp/>axis<sp/>of<sp/>Earth<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>6378137.0;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Semi-minor<sp/>axis<sp/>of<sp/>Earth<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>6356752.31424518;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flattening<sp/>of<sp/>Earth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>(a<sp/>-<sp/>b)<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eccentricity<sp/>of<sp/>Earth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>std::sqrt(f<sp/>*<sp/>(2<sp/>-<sp/>f));</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Radius<sp/>of<sp/>curvature<sp/>in<sp/>the<sp/>meridian<sp/>plane<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R_n<sp/>=<sp/>a<sp/>*<sp/>(1<sp/>-<sp/>e<sp/>*<sp/>e)<sp/>/</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow((1<sp/>-<sp/>(e<sp/>*<sp/>e)<sp/>*<sp/>(std::sin(geoPositionLlh(0))<sp/>*</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sin(geoPositionLlh(0)))),</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.5);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Radius<sp/>of<sp/>curvature<sp/>in<sp/>the<sp/>prime<sp/>vertical<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R_e<sp/>=<sp/>a<sp/>/<sp/>std::sqrt(1<sp/>-<sp/>(e<sp/>*<sp/>e)<sp/>*<sp/>(std::sin(geoPositionLlh(0))<sp/>*</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sin(geoPositionLlh(0))));</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Average<sp/>radius<sp/>of<sp/>curvature<sp/>of<sp/>Earth<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R_0<sp/>=<sp/>std::sqrt(R_n<sp/>*<sp/>R_e);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transport<sp/>angular<sp/>velocity<sp/>(rad/s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>w_en_n;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>w_en_n<sp/>&lt;&lt;<sp/>v_eb_n(1)<sp/>/<sp/>(R_0<sp/>+<sp/>geoPositionLlh(2)),</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-v_eb_n(0)<sp/>/<sp/>(R_0<sp/>+<sp/>geoPositionLlh(2)),</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-(v_eb_n(1)<sp/>*<sp/>std::tan(geoPositionLlh(0)))<sp/>/<sp/>(R_0<sp/>+<sp/>geoPositionLlh(2));</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w_en_n;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcSaturationModel(</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measurement,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measRange)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Saturated<sp/>measurement<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>saturatedMeasurement;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Saturate<sp/>elements<sp/>of<sp/>measurement<sp/>to<sp/>absolute<sp/>values<sp/>of<sp/>measRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>saturatedMeasurement(0)<sp/>=<sp/>std::min(std::abs(measurement(0)),<sp/>measRange(0))<sp/>*</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(measurement(0)<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>saturatedMeasurement(1)<sp/>=<sp/>std::min(std::abs(measurement(1)),<sp/>measRange(1))<sp/>*</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(measurement(1)<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>saturatedMeasurement(2)<sp/>=<sp/>std::min(std::abs(measurement(2)),<sp/>measRange(2))<sp/>*</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(measurement(2)<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>saturatedMeasurement;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal">Eigen::Vector3d<sp/>ImuSimulator::calcQuantizationModel(</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>measurement,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Quantized<sp/>measurement<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>quantizedMeasurement;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Quantize<sp/>elements<sp/>of<sp/>measurement<sp/>to<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>quantizedMeasurement(0)<sp/>=</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::round(measurement(0)<sp/>/<sp/>resolution(0))<sp/>*<sp/>resolution(0);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>quantizedMeasurement(1)<sp/>=</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::round(measurement(1)<sp/>/<sp/>resolution(1))<sp/>*<sp/>resolution(1);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>quantizedMeasurement(2)<sp/>=</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::round(measurement(2)<sp/>/<sp/>resolution(2))<sp/>*<sp/>resolution(2);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>quantizedMeasurement;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimu__simulator_1_1_imu_simulator_1a039ae415c00d79cc75593969fc3f39bf" kindref="member">ImuSimulator::resetImuSimulator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>IMU<sp/>stochastic<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>pAccStochasticErrors_-&gt;z_N<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>pAccStochasticErrors_-&gt;z_B<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>pAccStochasticErrors_-&gt;z_K<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>pGyroStochasticErrors_-&gt;z_N<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>pGyroStochasticErrors_-&gt;z_B<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>pGyroStochasticErrors_-&gt;z_K<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>flag<sp/>indicating<sp/>if<sp/>IMU<sp/>constant<sp/>errors<sp/>are<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>constErrorsInitialized_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-Initialize<sp/>IMU<sp/>constant<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>initializeRandomConstantErrors();</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImuSimulator::drawRandNormalDistNum()<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>normal<sp/>distributed<sp/>random<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalDistribution_(randomNumberGenerator_);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImuSimulator::drawRandUniformDistNumFromInterval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>interval)<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>uniform<sp/>distributed<sp/>random<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>randUniformNum<sp/>=<sp/>uniformDistribution_(randomNumberGenerator_);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>-interval;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>interval;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b<sp/>-<sp/>a)<sp/>*<sp/>randUniformNum<sp/>+<sp/>a;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>imu_simulator</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/IMU-Simulator/IMU-Simulator/src/imu_simulator.cpp"/>
  </compounddef>
</doxygen>
